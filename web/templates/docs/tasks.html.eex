<div class="container page">
<h2 class="page-title">
  Mix tasks
</h2>
<%# This file is auto-generated with 'mix run task_docs.exs' %>
  <div class="panel panel-default">
    <div class="panel-heading">
      <h3 id="hex" class="panel-title">
        hex
        <a href="#hex"><span class="glyphicon glyphicon-link pull-right"></span></a>
      </h3>
    </div>
    <div class="panel-body">
      <p><em>Prints hex tasks and their information.</em></p>
<p><code class="inline">mix hex</code></p>

    </div>
  </div>


  <div class="panel panel-default">
    <div class="panel-heading">
      <h3 id="hex_config" class="panel-title">
        hex.config
        <a href="#hex_config"><span class="glyphicon glyphicon-link pull-right"></span></a>
      </h3>
    </div>
    <div class="panel-body">
      <p><em>Reads or updates hex configuration file.</em></p>
<p><code class="inline">mix hex.config KEY [VALUE]</code></p>
<h3>Config keys</h3>
<ul>
<li><code class="inline">username</code> - Hex username
</li>
<li><code class="inline">key</code> - Hex API key
</li>
<li><code class="inline">api_url</code> - Hex API base URL (without trailing slash)
</li>
<li><code class="inline">cdn_url</code> - Hex CDN base URL (without trailing slash)
</li>
<li><code class="inline">http_proxy</code> - HTTP proxy server
</li>
<li><code class="inline">https_proxy</code> - HTTPS proxy server
</li>
</ul>

    </div>
  </div>


  <div class="panel panel-default">
    <div class="panel-heading">
      <h3 id="hex_docs" class="panel-title">
        hex.docs
        <a href="#hex_docs"><span class="glyphicon glyphicon-link pull-right"></span></a>
      </h3>
    </div>
    <div class="panel-body">
      <p><em>Publishes documentation for the current project and version.</em></p>
<p>The documentation will be accessible at <code class="inline">http://hexdocs.pm/my_package/1.0.0</code>,
<code class="inline">http://hexdocs.pm/my_package</code> will always redirect to the latest published
version.</p>
<p>Documentation will be generated by running the <code class="inline">mix docs</code> task. <code class="inline">ex_doc</code>
provides this task by default, but any library can be used. Or an alias can be
used to extend the documentation generation. The expected result of the task
is the generated documentation located in the <code class="inline">doc/</code> directory with an
<code class="inline">index.html</code> file.</p>
<h3>Command line options</h3>
<ul>
<li><code class="inline">--revert VERSION</code> - Revert given version
</li>
</ul>

    </div>
  </div>


  <div class="panel panel-default">
    <div class="panel-heading">
      <h3 id="hex_info" class="panel-title">
        hex.info
        <a href="#hex_info"><span class="glyphicon glyphicon-link pull-right"></span></a>
      </h3>
    </div>
    <div class="panel-body">
      <p><em>Prints hex package or system information.</em></p>
<p><code class="inline">mix hex.info [PACKAGE [VERSION]]</code></p>
<p>If <code class="inline">package</code> is not given, print system information. This includes when
registry was last updated and current system version.</p>
<p>If <code class="inline">package</code> is given, print information about the package. This includes all
released versions and package metadata.</p>
<p>If <code class="inline">package</code> and <code class="inline">version</code> is given print release information. This includes
remote Git URL and Git ref, and all package dependencies.</p>

    </div>
  </div>


  <div class="panel panel-default">
    <div class="panel-heading">
      <h3 id="hex_key" class="panel-title">
        hex.key
        <a href="#hex_key"><span class="glyphicon glyphicon-link pull-right"></span></a>
      </h3>
    </div>
    <div class="panel-body">
      <p><em>Remove or list API keys associated with your account.</em></p>
<h4>Remove key</h4>
<p>Remove given API key from account.</p>
<p>The key can no longer be used to authenticate API requests.</p>
<p><code class="inline">mix hex.key remove key_name</code></p>
<h4>List keys</h4>
<p>List all API keys associated with your account.</p>
<p><code class="inline">mix hex.key list</code></p>

    </div>
  </div>


  <div class="panel panel-default">
    <div class="panel-heading">
      <h3 id="hex_outdated" class="panel-title">
        hex.outdated
        <a href="#hex_outdated"><span class="glyphicon glyphicon-link pull-right"></span></a>
      </h3>
    </div>
    <div class="panel-body">
      <p>Shows all packages that have a version mismatch between the registry and
your mix.lock file.</p>
<p>By default, it only shows top-level packages explicitly listed in the
<code class="inline">mix.exs</code> file. All outdated packages can be displayed by using the <code class="inline">--all</code>
command line option.</p>
<h3>Command line options</h3>
<ul>
<li><code class="inline">--all</code> - shows all outdated packages, including packages in <code class="inline">mix.lock</code> not specified in <code class="inline">mix.exs</code>.
</li>
</ul>
<p><code class="inline">mix hex.outdated</code>
<code class="inline">mix hex.outdated --all</code></p>

    </div>
  </div>


  <div class="panel panel-default">
    <div class="panel-heading">
      <h3 id="hex_owner" class="panel-title">
        hex.owner
        <a href="#hex_owner"><span class="glyphicon glyphicon-link pull-right"></span></a>
      </h3>
    </div>
    <div class="panel-body">
      <p><em>Add, remove or list package owners.</em></p>
<p>A package owner have full permissions to the package. They can publish and
revert releases and even remove other package owners.</p>
<h4>Add owner</h4>
<p>Add an owner to package by specifying the package name and email of the new
owner.</p>
<p><code class="inline">mix hex.owner add PACKAGE EMAIL</code></p>
<h4>Remove owner</h4>
<p>Remove an owner to package by specifying the package name and email of the new
owner.</p>
<p><code class="inline">mix hex.owner remove PACKAGE EMAIL</code></p>
<h4>List owners</h4>
<p>List all owners of given package.</p>
<p><code class="inline">mix hex.owner list PACKAGE</code></p>

    </div>
  </div>


  <div class="panel panel-default">
    <div class="panel-heading">
      <h3 id="hex_publish" class="panel-title">
        hex.publish
        <a href="#hex_publish"><span class="glyphicon glyphicon-link pull-right"></span></a>
      </h3>
    </div>
    <div class="panel-body">
      <p><em>Publish a new version of your package and update the package.</em></p>
<p><code class="inline">mix hex.publish</code></p>
<p>If it is a new package being published it will be created and the user
specified in <code class="inline">username</code> will be the package owner. Only package owners can
publish.</p>
<p>A published version can be amended or reverted with <code class="inline">--revert</code> up to one hour
after its publication. If you want to revert a publication that is more than
one hour old you need to contact an administrator.</p>
<h3>Command line options</h3>
<ul>
<li><code class="inline">--revert VERSION</code> - Revert given version
</li>
</ul>
<h3>Configuration</h3>
<ul>
<li><p><code class="inline">:app</code> - Package name (required).</p>
</li>
<li><p><code class="inline">:version</code> - Package version (required).</p>
</li>
<li><p><code class="inline">:deps</code> - List of package dependencies (see Dependencies below).</p>
</li>
<li><p><code class="inline">:description</code> - Short description of the project.</p>
</li>
<li><code class="inline">:package</code> - Hex specific configuration (see Package configuration below).
</li>
</ul>
<h3>Dependencies</h3>
<p>Dependencies are defined in mix’s dependency format. But instead of using
<code class="inline">:git</code> or <code class="inline">:path</code> as the SCM <code class="inline">:package</code> is used.</p>
<pre><code>defp deps do
  [ {:ecto, &quot;~&gt; 0.1.0&quot;},
    {:postgrex, &quot;~&gt; 0.3.0&quot;},
    {:cowboy, github: &quot;extend/cowboy&quot;} ]
end</code></pre>
<p>As can be seen Hex package dependencies works alongside git dependencies.
Important to note is that non-Hex dependencies will not be used during
dependency resolution and neither will be they listed as dependencies of the
package.</p>
<h3>Package configuration</h3>
<p>Additional metadata of the package can optionally be defined, but it is very
recommended to do so.</p>
<ul>
<li><p><code class="inline">:name</code> - Set this if the package name is not the same as the application
 name.</p>
</li>
<li><p><code class="inline">:files</code> - List of files and directories to include in the package,
can include wildcards. Defaults to `["lib", "priv", "mix.exs", "README*",
"readme*", "LICENSE*", "license*", "CHANGELOG*", "changelog*", "src"]`.</p>
</li>
<li><p><code class="inline">:contributors</code> - List of names of contributors.</p>
</li>
<li><p><code class="inline">:licenses</code> - List of licenses used by the package.</p>
</li>
<li><p><code class="inline">:links</code> - Map of links relevant to the package.</p>
</li>
<li><code class="inline">:build_tools</code> - List of build tools that can build the package. Hex will
try to automatically detect the build tools, it will do this based on the
files in the package. If a “rebar” or “rebar.config” file is present Hex
will mark it as able to build with rebar. This detection can be overridden
by setting this field.
</li>
</ul>

    </div>
  </div>


  <div class="panel panel-default">
    <div class="panel-heading">
      <h3 id="hex_search" class="panel-title">
        hex.search
        <a href="#hex_search"><span class="glyphicon glyphicon-link pull-right"></span></a>
      </h3>
    </div>
    <div class="panel-body">
      <p><em>Display packages matching the given search query.</em></p>
<p><code class="inline">mix hex.search PACKAGE</code></p>

    </div>
  </div>


  <div class="panel panel-default">
    <div class="panel-heading">
      <h3 id="hex_user" class="panel-title">
        hex.user
        <a href="#hex_user"><span class="glyphicon glyphicon-link pull-right"></span></a>
      </h3>
    </div>
    <div class="panel-body">
      <p><em>Hex user tasks.</em></p>
<h4>Registers a new user</h4>
<p><code class="inline">mix hex.user register</code></p>
<h4>Prints the current user</h4>
<p><code class="inline">mix hex.user whoami</code></p>
<h4>Authorize a new user</h4>
<p>Authorizes a new user on the local machine by generating a new API key and
storing it in the hex config.</p>
<p><code class="inline">mix hex.user auth</code></p>
<h4>Deauthorize the user</h4>
<p>Deauthorizes the user from the local machine by removing the API key from the
hex config.</p>
<p><code class="inline">mix hex.user deauth</code></p>
<h4>Test authentication</h4>
<p>Tests if authentication works with the stored API key.</p>
<p><code class="inline">mix hex.user test</code></p>
<h4>Reset user password</h4>
<p><code class="inline">mix hex.user reset password</code></p>

    </div>
  </div>
</div>
